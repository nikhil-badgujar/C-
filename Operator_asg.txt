//1) class Number
//   {
//       int num;
//   }
//In the main function,
//Number n1(8),n2(4),n3(20),n4(6),n5;
//n5=n1-n2*n3/n4;
//

//#include<iostream>
//using namespace std;
//
//class Number
//{
//	int num;
//public:
//	Number(){}
//	Number(int num)
//	{
//		this->num=num;
//	}
//	int getnum()
//	{
//		return num;
//	}
//	Number operator*(Number &ref)
//	{
//		return Number(num*ref.num);
//	}
//	Number operator/(Number &ref)
//	{
//		return Number(num/ref.num);
//	}
//	Number operator-(Number ref)
//	{
//		return Number(num-ref.num);
//	}
//};
//int main()
//{
//	Number n1(8),n2(4),n3(20),n4(6),n5;
//	n5=n1-n2*n3/n4;
//	cout<<endl<<n5.getnum()<<endl;
//}
//==========================================================================

//2) class sample
//   {
//	private:
//		char ch;
//	public:
//		sample(char ch)
//		{
//			this->ch=ch;
//		}
//  };
//
//given above class.
//
//write a global function "display" which will access "ch" directly and display it.
//call this function from main function.

//#include<iostream>
//using namespace std;
//
//class sample
//{
//	char ch;
//public:
//	sample(char ch)
//	{
//		this->ch=ch;
//	}
//	friend void display(sample&);
//};
//void display(sample &ref)
//{
//	cout<<ref.ch<<endl;
//}
//int main()
//{
//	sample s('Z');
//	display(s);
//}

//======================================================================

	
//3)write a global function "check" which will take 2 modules 
//(i.e. Module1 and Module2 ) and check whether Modules are same or not.
//call this "check" function from main function.	
//
//#include<iostream>
//using namespace std;
//
//class Module2;
//class Module1
//{
//	int duration;
//public:
//	Module1(int k)
//	{
//		this->duration = k;
//	}
//	friend bool check(Module1 &, Module2 &);
//};
//
//
//class Module2
//{
//	int duration;
//public:
//		Module2(int k)
//		{
//			this->duration = k;
//		}
//		friend bool check(Module1 &, Module2 &);
//};	
//
//bool check(Module1 &ref1, Module2 &ref2)
//{
//	if(ref1.duration==ref2.duration)
//		return true;
//	else
//		return false;
//}
//
//int main()
//{
//	Module1 m1(5);
//	Module2 m2(5);
//	cout<<check(m1,m2)<<endl;
//}

//==========================================================================

//4) Define a class , write two member functions 
//	void disp1(){ //some code }
//	void disp2(){ // some code }
//
//	Try to call disp1   from    disp2.

//#include<iostream>
//using namespace std;
//
//class Myclass
//{
//	int num;
//public:
//	Myclass()	{	}
//	void disp1()
//	{
//		cout<<"In disp1"<<endl;
//	}
//	void disp2()
//	{
//		disp1();
//		cout<<"In disp2"<<endl;
//	}
//};
//int main()
//{
//	Myclass m;
//	m.disp2();
//}

//=========================================================================


//5) Define a class with constructor and  member function
//
//	create object, call member function
//	now create a reference to that object, 
//	and using that reference try to call member function

//#include<iostream>
//using namespace std;
//
//class Myclass
//{
//	int num;
//public:
//	Myclass() { }
//	Myclass (int k)
//	{
//		this->num=k;
//	}
//	void disp()
//	{
//		cout<<"In disp"<<endl;
//	}
//	
//};
//
//int main()
//{
//	Myclass m;
//	Myclass &ref=m;
//	ref.disp();
//}

